{"version":3,"sources":["components/Home.js","components/Navbar.js","components/ListEquipment.js","components/AddEquipment.js","components/EditEquipment.js","components/EquipmentNotes.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","withRouter","to","src","alt","Equipment","props","equipment","name","equipmentType","modelNumber","serialNumber","siteLocation","specificLocation","_id","onClick","deleteEquipment","ListEquipment","state","equipmentArray","bind","axios","get","then","response","setState","data","catch","err","console","error","id","delete","res","log","this","filter","el","map","currentEquipment","key","equipmentList","AddEquipment","onChangeName","onChangeEquipmentType","onChangeModelNumber","onChangeSerialNumber","onChangeSiteLocation","onChangeSpecificLocation","onSubmit","e","target","value","preventDefault","window","location","post","placeholder","type","onChange","EditEquipment","match","params","Notes","noteItem","note","dateTime","deleteNote","EquipmentNotes","onChangeNewNote","equipmentNotesList","newNote","Date","equipmentNotes","equipmentId","notes","newEquipmentNotes","noteObject","length","App","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b7e2928.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Home extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <h4 className='center'>Home</h4>\r\n                <p>Home page</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className=\"nav-wrapper navbar\">\r\n            <div className='container'>\r\n                <Link to=\"/home\" className=\"left brand-logo\"> <img className='logoImage' src='https://static1.squarespace.com/static/5b9a8f85cef3721a831f6917/t/5c1a4d08b8a045eac311c4eb/1559658308940/?format=1500w' alt=\"K&S Ventures\"/></Link>\r\n                <ul className=\"right\">\r\n                    <li><NavLink to=\"/home\">Home</NavLink></li>\r\n                    <li><NavLink to=\"/addEquipment\">Add Equipment</NavLink></li>\r\n                    <li><NavLink to=\"/listEquipment\">Logged Equipment</NavLink></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BACKEND_API = \"\";\r\n\r\nconst Equipment = props => (\r\n    <tr>\r\n        <td>{props.equipment.name}</td>\r\n        <td>{props.equipment.equipmentType}</td>\r\n        <td>{props.equipment.modelNumber}</td>\r\n        <td>{props.equipment.serialNumber}</td>\r\n        <td>{props.equipment.siteLocation}</td>\r\n        <td>{props.equipment.specificLocation}</td>\r\n        <td>\r\n            <Link className= 'btn waves-effect green darken-4' to={\"/editEquipment/\"+props.equipment._id}>edit</Link> | \r\n            <button className= 'btn waves-effect red darken-4' onClick={() => {props.deleteEquipment(props.equipment._id)}}>delete</button>\r\n        </td>\r\n        <td>\r\n            <Link to={\"/equipmentNotes/\"+props.equipment._id} className= 'btn waves-effect blue darken-4'>Notes</Link>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nclass ListEquipment extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            equipmentArray:[]\r\n        }\r\n\r\n        this.deleteEquipment =this.deleteEquipment.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(BACKEND_API + \"/equipment/listAll\")\r\n        .then(response => {\r\n            this.setState({ equipmentArray: response.data })\r\n        })\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    deleteEquipment(id){\r\n        axios.delete(BACKEND_API + \"/equipment/\" + id)\r\n        .then(res => console.log(res.data))\r\n        this.setState({\r\n            equipmentArray: this.state.equipmentArray.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    equipmentList(){\r\n        return this.state.equipmentArray.map( currentEquipment => {\r\n            return <Equipment equipment={currentEquipment} deleteEquipment={this.deleteEquipment} key={currentEquipment._id}/>\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n               <h3>Logged Equipment</h3>\r\n               <table className='table'>\r\n                   <thead className='thead-light'>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Equipment Type</th>\r\n                            <th>Model Number</th>\r\n                            <th>Serial Number</th>\r\n                            <th>Site Location</th>\r\n                            <th>Specific Location</th>\r\n                        </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                       { this.equipmentList() }\r\n                   </tbody>\r\n               </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ListEquipment;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BACKEND_API = \"\";\r\n\r\nclass AddEquipment extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeEquipmentType = this.onChangeEquipmentType.bind(this);\r\n        this.onChangeModelNumber = this.onChangeModelNumber.bind(this);\r\n        this.onChangeSerialNumber = this.onChangeSerialNumber.bind(this);\r\n        this.onChangeSiteLocation = this.onChangeSiteLocation.bind(this);\r\n        this.onChangeSpecificLocation = this.onChangeSpecificLocation.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            equipmentType: '',\r\n            modelNumber: '',\r\n            serialNumber: '',\r\n            siteLocation: '',\r\n            specificLocation: ''\r\n        }    \r\n    }\r\n\r\n    componentDidMount(){\r\n        //\r\n    }\r\n\r\n    onChangeName(e){\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeEquipmentType(e){\r\n        this.setState({\r\n            equipmentType: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeModelNumber(e){\r\n        this.setState({\r\n            modelNumber: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeSerialNumber(e){\r\n        this.setState({\r\n            serialNumber: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeSiteLocation(e){\r\n        this.setState({\r\n            siteLocation: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeSpecificLocation(e){\r\n        this.setState({\r\n            specificLocation: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const equipment = {\r\n            name: this.state.name,\r\n            equipmentType: this.state.equipmentType,\r\n            modelNumber: this.state.modelNumber,\r\n            serialNumber: this.state.serialNumber,\r\n            siteLocation: this.state.siteLocation,\r\n            specificLocation: this.state.specificLocation\r\n        }\r\n\r\n        console.log(equipment);\r\n\r\n        window.location = '/listEquipment';\r\n\r\n        axios.post(BACKEND_API+'/equipment/add', equipment)\r\n        .then(res => console.log(res.data))\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n            <h3>Add Equipment</h3>\r\n                <div className='row'>\r\n                    <div className='col s12'>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Name\" id='equipmentName' type=\"text\" className=\"validate\" value={this.state.name} onChange={this.onChangeName} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Equipment Type\" type=\"text\" className=\"input-field col s12\" value={this.state.equipmentType} onChange={this.onChangeEquipmentType} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Model Number\" type=\"text\" className=\"input-field col s12\" value={this.state.modelNumber} onChange={this.onChangeModelNumber} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Serial Number\" type=\"text\" className=\"input-field col s12\" value={this.state.serialNumber} onChange={this.onChangeSerialNumber} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Site Location\" type=\"text\" className=\"input-field col s12\" value={this.state.siteLocation} onChange={this.onChangeSiteLocation} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Specific Location\" type=\"text\" className=\"input-field col s12\" value={this.state.specificLocation} onChange={this.onChangeSpecificLocation} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <button className=\"btn waves-effect blue darken-4\" type=\"submit\" name=\"submitEquipment\" onClick={this.onSubmit} >Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEquipment;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BACKEND_API = \"\";\r\n\r\nclass EditEquipment extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeEquipmentType = this.onChangeEquipmentType.bind(this);\r\n        this.onChangeModelNumber = this.onChangeModelNumber.bind(this);\r\n        this.onChangeSerialNumber = this.onChangeSerialNumber.bind(this);\r\n        this.onChangeSiteLocation = this.onChangeSiteLocation.bind(this);\r\n        this.onChangeSpecificLocation = this.onChangeSpecificLocation.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            equipmentType: '',\r\n            modelNumber: '',\r\n            serialNumber: '',\r\n            siteLocation: '',\r\n            specificLocation: ''\r\n        }    \r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        console.log(this.props.match);\r\n\r\n        axios.get(BACKEND_API + \"/equipment/\" + this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                equipmentType: response.data.equipmentType,\r\n                modelNumber: response.data.modelNumber,\r\n                serialNumber: response.data.serialNumber,\r\n                siteLocation: response.data.siteLocation,\r\n                specificLocation: response.data.specificLocation\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    onChangeName(e){\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeEquipmentType(e){\r\n        this.setState({\r\n            equipmentType: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeModelNumber(e){\r\n        this.setState({\r\n            modelNumber: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeSerialNumber(e){\r\n        this.setState({\r\n            serialNumber: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeSiteLocation(e){\r\n        this.setState({\r\n            siteLocation: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeSpecificLocation(e){\r\n        this.setState({\r\n            specificLocation: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const equipment = {\r\n            name: this.state.name,\r\n            equipmentType: this.state.equipmentType,\r\n            modelNumber: this.state.modelNumber,\r\n            serialNumber: this.state.serialNumber,\r\n            siteLocation: this.state.siteLocation,\r\n            specificLocation: this.state.specificLocation\r\n        }\r\n\r\n        window.location = '/listEquipment';\r\n\r\n        axios.post(BACKEND_API+'/equipment/update/' + this.props.match.params.id, equipment)\r\n        .then(res => console.log(res.data))\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n            <h3>Edit Equipment</h3>\r\n                <div className='row'>\r\n                    <div className='col s12'>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12 \">\r\n                                <input placeholder=\"Name\" id='equipmentName' type=\"text\" className=\"validate\" value={this.state.name} onChange={this.onChangeName} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Equipment Type\" type=\"text\" className=\"input-field col s12\" value={this.state.equipmentType} onChange={this.onChangeEquipmentType} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Model Number\" type=\"text\" className=\"input-field col s12\" value={this.state.modelNumber} onChange={this.onChangeModelNumber} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Serial Number\" type=\"text\" className=\"input-field col s12\" value={this.state.serialNumber} onChange={this.onChangeSerialNumber} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Site Location\" type=\"text\" className=\"input-field col s12\" value={this.state.siteLocation} onChange={this.onChangeSiteLocation} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Specific Location\" type=\"text\" className=\"input-field col s12\" value={this.state.specificLocation} onChange={this.onChangeSpecificLocation} />\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <button className=\"btn waves-effect blue darken-4\" type=\"submit\" name=\"submitEquipment\" onClick={this.onSubmit} >Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditEquipment;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BACKEND_API = \"\";\r\n\r\nconst Notes = props => (\r\n    <tr>\r\n        <td>{props.noteItem.note}</td>\r\n        <td>{props.noteItem.dateTime}</td>\r\n        <td><button className= 'btn waves-effect red darken-4' onClick={() => {props.deleteNote(props.noteItem._id)}}>delete</button></td>\r\n    </tr>\r\n)  \r\n\r\nclass EquipmentNotes extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.onChangeNewNote = this.onChangeNewNote.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.equipmentNotesList = this.equipmentNotesList.bind(this);\r\n        this.deleteNote = this.deleteNote.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            newNote: {\r\n                note: '',\r\n                dateTime: new Date()\r\n            },\r\n            equipmentNotes: [],\r\n            equipmentId: ''\r\n        }    \r\n    }\r\n\r\n    componentDidMount(){\r\n        //\r\n        axios.get(BACKEND_API + '/equipment/notes/' + this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                equipmentNotes: response.data.notes,\r\n                equipmentId: this.props.match.params.id\r\n        })\r\n    }).catch(err => console.error(err));\r\n\r\n    }\r\n\r\n\r\n    onChangeNewNote(e){\r\n        this.setState({\r\n            newNote: {\r\n                note: e.target.value,\r\n                dateTime: new Date()\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newEquipmentNotes = {\r\n            newNote: this.state.newNote.note,\r\n            dateTime: new Date()\r\n        }\r\n\r\n        axios.post(BACKEND_API+'/equipment/addNote/' + this.props.match.params.id, newEquipmentNotes)\r\n        .then(res => console.log(res.data))\r\n        .catch(err => console.error(err));\r\n\r\n        this.setState(state => {\r\n            // const equipmentNotes = [...state.equipmentNotes, newEquipmentNotes];\r\n        \r\n            return {\r\n                // equipmentNotes,\r\n                newNote: {\r\n                    note: '',\r\n                    dateTime: new Date()\r\n                }\r\n            };\r\n        })\r\n    }\r\n\r\n    deleteNote(id){\r\n        axios.delete(BACKEND_API + \"/equipment/notes/\" + this.state.equipmentId + '/' + id)\r\n        .then(res => console.log(res.data))\r\n        this.setState({\r\n            equipmentNotes: this.state.equipmentNotes.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    equipmentNotesList(){\r\n        console.log(this.state.equipmentNotes)\r\n        return this.state.equipmentNotes.map( noteObject => {\r\n            return <Notes noteItem={noteObject} deleteNote={this.deleteNote} key={noteObject._id}/>\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n            <h3>Equipment Notes: {this.state.name}</h3>\r\n                <div className='row'>\r\n                    <div className='col s12'>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input placeholder=\"Note\" id='equipmentNote' type=\"text\" className=\"validate\" value={this.state.newNote.note} onChange={this.onChangeNewNote} />\r\n                                <button className= 'btn waves-effect blue darken-4'>Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className='col s12'>\r\n                        <h4>History</h4>\r\n                        <table className='table'>\r\n                            <thead className='thead-light'>\r\n                                <tr>\r\n                                    <th>Notes</th>\r\n                                    <th>Date Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                { this.state.equipmentNotes.length > 0 ? this.equipmentNotesList() : \r\n                                    <tr>\r\n                                        <td><b>No Notes</b></td>\r\n                                    </tr>}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EquipmentNotes;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Navbar from './components/Navbar';\nimport ListEquipment from \"./components/ListEquipment\";\nimport AddEquipment from \"./components/AddEquipment\";\nimport EditEquipment from \"./components/EditEquipment\";\nimport EquipmentNotes from \"./components/EquipmentNotes\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/listEquipment\" component={ListEquipment} />\n        <Route path=\"/addEquipment\" component={AddEquipment} />\n        <Route path=\"/editEquipment/:id\" component={EditEquipment} />\n        <Route path=\"/equipmentNotes/:id\" component={EquipmentNotes} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n            <App />\n        ,\n        document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}